services:
  nginx:
    container_name: nginx  
    image: nginx:latest
    ports:
      - "8880:80"
      - "8443:443"
    volumes:
      - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./services/nginx/ssl:/etc/ssl
    networks:
      - hypertube-net
    depends_on:
      - frontend
      - backend-api
      # - user-management

  frontend:
    container_name: frontend
    build: ./services/frontend
    ports:
      - "4000:4000"
    volumes:
      - ./services/frontend:/app
      - /app/node_modules #il faut le traiter avec les variable d'env sinon pb de droits
    networks:
      - hypertube-net
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  backend-api:
    container_name: backend-api
    build: ./services/backend-api
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - ./services/backend-api:/app
    networks:
      - hypertube-net

  backend-user:
    container_name: backend-user
    build:
      context: ./services/backend-user
    ports:
      - "6000:6000"
    env_file:
      - .env
    volumes:
      - ./services/backend-user:/app
    networks:
      - hypertube-net
  #   depends_on:
  #     db:
  #       condition: service_healthy

  # db:
  #   container_name: db
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile
  #   image: postgres:17
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #     # - ./backend/hypertube/imdb_data/data:/data
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: pass
  #     POSTGRES_DB: hypertube
  #   networks:
  #     - hypertube-net
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U user -d db"]
  #     interval: 15s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 15s

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:latest
  #   ports:
  #     - "5050:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
  #     PGADMIN_DEFAULT_PASSWORD: "admin"
  #   networks:
  #     - hypertube-net
  #   depends_on:
  #     - db

networks:
  hypertube-net:
    driver: bridge

volumes:
  pgdata:
    driver: local
