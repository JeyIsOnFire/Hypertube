
services:
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "4000:4000"
    volumes:
      - ./frontend:/app  # Monte les fichiers locaux dans le conteneur pour hot reload
      - /app/node_modules  # Assure que les modules installés sont persistants
    networks:
      - hypertube-net
    environment:
      - NODE_ENV=development
    stdin_open: true  # Permet une interaction continue
    tty: true  # Nécessaire pour le hot reload

  backend-api:
    container_name: backend-api
    build:
      context: . # Contexte de build à la racine du projet
      dockerfile: ./backend/Dockerfile  # Spécifie explicitement le chemin vers le Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - ./backend/hypertube:/app
    networks:
      - hypertube-net
    depends_on:
      - db

  nginx:
    container_name: server
    image: nginx:alpine
    ports:
      - "8880:8880"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - .nginx/certs:/etc/nginx/certs
    networks:
      - hypertube-net
    depends_on:
      - frontend
      - backend-api

  db:
    container_name: db
    image: postgres:17
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: hypertube
    networks:
      - hypertube-net

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    networks:
      - hypertube-net
    depends_on:
      - db

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - hypertube-net

  # streamer:
  #   container_name: stream
  #   build: ./streamer  # Si tu as un Dockerfile dans le répertoire ./streamer
  #   volumes:
  #     - ./videos:/app/videos
  #   networks:
  #     - hypertube-net
  #   depends_on:
  #     - backend-api

networks:
  hypertube-net:
    driver: bridge

volumes:
  pgdata:
    driver: local

